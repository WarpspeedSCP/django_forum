# Generated by Django 2.0.2 on 2018-04-11 17:30

import boardManager.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=200, upload_to=boardManager.models.upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.CharField(default=boardManager.models.mediumUUID, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('create_date_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('contents', models.TextField()),
                ('upvote_count', models.IntegerField(default=0)),
                ('downvote_count', models.IntegerField(default=0)),
                ('creator', models.ForeignKey(default='[deleted]', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='comments', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.CharField(default=boardManager.models.shortUUID, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('create_date_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('subscriber_count', models.IntegerField(default=0)),
                ('thread_count', models.IntegerField(default=0)),
                ('admins', models.ManyToManyField(blank=True, limit_choices_to={'is_staff': True}, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.CharField(default=boardManager.models.shortUUID, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('create_date_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('comment_count', models.IntegerField(default=0)),
                ('upvote_count', models.IntegerField(default=0)),
                ('downvote_count', models.IntegerField(default=0)),
                ('creator', models.ForeignKey(default='[deleted]', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='threads', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='boardManager.Forum', to_field='name')),
            ],
        ),
        migrations.AddField(
            model_name='tag',
            name='tagged_threads',
            field=models.ManyToManyField(blank=True, to='boardManager.Thread'),
        ),
        migrations.AddField(
            model_name='comment',
            name='thread',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='boardManager.Thread'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='boardManager.Comment'),
        ),
    ]
